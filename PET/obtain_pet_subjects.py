#!/usr/bin/python
# coding: utf-8

# # obtain_pet_subjects
# This script is to separate out the **AV45**, **PIB** and **FDG** scans out of the entire data set  
# This is so that `oasis_data_matchup.r` can be applied to each of them separately using the CSV files generated by this script

import pandas as pd
import argparse

ap = argparse.ArgumentParser()
ap.add_argument("-c", "--csv", required=True, help="path to CSV file of PET scan database")
args = vars(ap.parse_args())

df = pd.read_csv('raghavprasad13_4_14_2020_6_57_47.csv')
df.drop([df.columns[i] for i in range(len(df.columns)) if not i in [0, 1]], axis=1, inplace=True)

# ### Function to be applied on DataFrame to obtain an extra column which will allow segregation based on tracer type
def get_tracer_type(pet_sess_id):
    res = pet_sess_id.split('_')[1]
    return res

df['tracer'] = df[df.columns[0]].apply(get_tracer_type)

# ### Here we segregate the dataset into AV45, PIB and FDG scans

dict_of_dfs = {tracer_name:df[df['tracer'] == tracer_name] for tracer_name in df['tracer'].unique().tolist()}


# ### Here each of the segregated scans are saved to their respective CSVs; i.e. AV45 scans are saved to `AV45.csv`, PIB scans are saved to `PIB.csv` and FDG scans are saved to `FDG.csv`
# The only columns preserved in the files are the `XNAT_PETSESSIONDATA ID` and `Subject` columns

for key in dict_of_dfs:
    dict_of_dfs[key].to_csv(key+'.csv', header=False, index=False, columns=[col for col in dict_of_dfs[key].columns if col != 'tracer'])


